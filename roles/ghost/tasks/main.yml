---
- name: Ensure Ghost directory structure exists
  file: dest="{{ item }}" recurse=yes state=directory
  with_items:
    - "{{ ghost_dir }}"
    - "{{ ghost_dir }}/mysql"
    - "{{ ghost_dir }}/content"
    - "{{ ghost_dir }}/content/themes"
    - "{{ ghost_logs_dir }}"

- name: Deploy Ghost docker-compose.yml
  template: src=docker-compose.yml.j2 dest="{{ ghost_dir }}/docker-compose.yml"

- name: Compose Ghost docker with MySQL docker
  shell: "docker compose pull && docker compose up -d"
  args:
    chdir: "{{ ghost_dir }}"

- name: Deploy Ghost docker-compose.yml without env vars
  template: src=docker-compose-noenv.yml.j2 dest="{{ ghost_dir }}/docker-compose.yml"

- name: Download latest Attila theme
  shell: "wget https://github.com/zutrinken/attila/archive/refs/heads/master.zip -O attila-master.zip"

- name: Unzip Attila theme
  shell: "unzip attila-master && rm attila-master.zip"

- name: Install Attila theme
  shell: |
    if [ ! -d "{{ ghost_dir }}/content/themes/attila-master" ]; then
      cp -r attila-master "{{ ghost_dir }}/content/themes/"
    else
      rsync -a attila-master "{{ ghost_dir }}/content/themes/"
    fi
    rm -r attila-master

- name: Change Attila theme folder owner and group
  file:
    dest: "{{ ghost_dir }}/content/themes/attila-master"
    recurse: yes
    owner: 1000
    group: 1000

- name: Deploy Ghost nginx vhost
  include_tasks: deploy_nginx_vhost.yml
  vars:
    host_name: "{{ ghost_host_name }}"
    http_port: '2368'
    logs_dir: "{{ ghost_logs_dir }}"
    ssl: "{{ ghost_ssl_enabled }}"
    server_block_beginning: |
      {% if ghost_ip_auth %}
          include snippets/ip_auth.conf;
      {% endif %}

          client_max_body_size 10m;

          location ^~ /assets/ {
              root {{ ghost_dir }}/content/themes/attila-master;
          }

          location ^~ /content/images/ {
              alias {{ ghost_dir }}/content/images/;
          }

    location_block_ending: |2
              proxy_cache one;
              proxy_cache_valid 60m;
              proxy_cache_valid 404 1m;
              proxy_cache_bypass $http_cache_control;
              proxy_ignore_headers Set-Cookie;
              proxy_hide_header Set-Cookie;
              proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
              proxy_ignore_headers Cache-Control;
              add_header X-Cache-Status $upstream_cache_status;

    server_block_ending: |
      {% if ghost_ip_auth %}
          location ~* ^/(ghost|p)/ {
              include snippets/ip_auth_check.conf;
              proxy_pass http://127.0.0.1:2368;
              include snippets/proxy_params.conf;
          }
      {% endif %}
  when: ghost_nginx_proxy

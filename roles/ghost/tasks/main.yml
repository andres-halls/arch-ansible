---
- name: Ensure Ghost directory structure exists
  file: dest="{{ item }}" recurse=yes state=directory
  with_items:
    - "{{ ghost_content_dir }}"
    - "{{ ghost_content_dir }}/themes"
    - "{{ ghost_logs_dir }}"

- name: Pull latest Ghost image and run docker container
  docker_container:
    name: ghost
    image: 'ghost'
    pull: yes
    state: started
    recreate: yes
    restart_policy: always
    hostname: "{{ ghost_host_name }}"
    ports:
      - "2368:2368"
    volumes:
      - "{{ ghost_content_dir }}:/var/lib/ghost/content"
    env:
      url: "{{ ghost_url }}"
      mail__transport: 'SMTP'
      mail__from: "{{ ghost_email_from }}"
      mail__options__host: "{{ ghost_smtp_host }}"
      mail__options__port: "{{ ghost_smtp_port }}"
      mail__options__auth__user: "{{ ghost_smtp_user }}"
      mail__options__auth__pass: "{{ ghost_smtp_pass }}"

- name: Download latest Attila theme
  shell: "wget https://github.com/zutrinken/attila/archive/refs/heads/master.zip -O attila-master.zip"
  args:
    warn: no

- name: Unzip Attila theme
  shell: "unzip attila-master && rm attila-master.zip"
  args:
    warn: no

- name: Install Attila theme
  shell: |
    if [ ! -d "{{ ghost_content_dir }}/themes/attila-master" ]; then
      cp -r attila-master "{{ ghost_content_dir }}/themes/"
    else
      rsync -a attila-master "{{ ghost_content_dir }}/themes/"
    fi
    rm -r attila-master
  args:
    warn: no

- name: Change Attila theme folder owner and group
  file:
    dest: "{{ ghost_content_dir }}/themes/attila-master"
    recurse: yes
    owner: 1000
    group: 1000

- name: Deploy Ghost nginx vhost
  include_tasks: deploy_nginx_vhost.yml
  vars:
    host_name: "{{ ghost_host_name }}"
    http_port: "2368"
    logs_dir: "{{ ghost_logs_dir }}"
    ssl: "{{ ghost_ssl_enabled }}"
    server_block_beginning: |
      {% if ghost_ip_auth %}
          include snippets/ip_auth.conf;
      {% endif %}

          client_max_body_size 10m;

          location ^~ /assets/ {
              root {{ ghost_content_dir }}/themes/attila-master;
          }

          location ^~ /content/images/ {
              alias {{ ghost_content_dir }}/images/;
          }

    location_block_beginning: |2+
              proxy_cache one;
              proxy_cache_valid 60m;
              proxy_cache_valid 404 1m;
              proxy_cache_bypass $http_cache_control;
              proxy_ignore_headers Set-Cookie;
              proxy_hide_header Set-Cookie;
              proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
              proxy_ignore_headers Cache-Control;
              add_header X-Cache-Status $upstream_cache_status;

    server_block_ending: |
      {% if ghost_ip_auth %}
          location ~ ^/(ghost|p)/ {
              satisfy any;
              allow 192.168.88.0/24;
              allow 172.17.0.0/24;
              deny all;
              auth_request /auth-ip;

              proxy_pass http://127.0.0.1:2368;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      {% endif %}
  when: ghost_nginx_proxy

alias ..='cd ..'
alias ...='cd ../..'

alias ls='lsd'
alias l='lsd -l'
alias ll='lsd -l'
alias la='lsd -la'

alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'

alias ip='ip -color=auto'

alias xclip='xclip -selection c'

alias docker-ps='docker ps --format "{{.Names}} {{.Status}}"'
alias docker-psa='docker ps -a --format "{{.Names}} {{.Status}}"'
alias docker-dangling-images='docker images -f dangling=true'
alias docker-unused-images='docker images --format {{.Repository}}:{{.Tag}} | grep -v "$(docker ps --format {{.Image}})"'

# This script was automatically generated by the broot program
# More information can be found in https://github.com/Canop/broot
# This function starts broot and executes the command
# it produces, if any.
# It's needed because some shell commands, like `cd`,
# have no useful effect if executed in a subshell.
function br {
    local cmd cmd_file code
    cmd_file=$(mktemp)
    if broot --outcmd "$cmd_file" "$@"; then
        cmd=$(<"$cmd_file")
        rm -f "$cmd_file"
        eval "$cmd"
    else
        code=$?
        rm -f "$cmd_file"
        return "$code"
    fi
}

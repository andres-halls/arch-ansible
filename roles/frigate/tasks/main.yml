---
- name: Ensure Frigate directory structure exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ frigate_path }}/config"
    - "{{ frigate_storage_path }}"

- name: Ensure {{ frigate_nginx_logs_dir }} directory exists
  ansible.builtin.file:
    path: "{{ frigate_nginx_logs_dir }}"
    state: directory
  when: frigate_nginx_proxy

- name: Deploy minimal config.yml if not existing
  ansible.builtin.template:
    src: config.yml.j2
    dest: "{{ frigate_path }}/config/config.yml"
    force: false

- name: Pull Frigate image version {{ frigate_version }} and run docker container
  community.docker.docker_container:
    name: frigate
    image: "ghcr.io/blakeblackshear/frigate:{{ frigate_version }}"
    pull: true
    recreate: true
    privileged: true
    restart_policy: 'unless-stopped'
    hostname: "{{ frigate_host_name }}"
    shm_size: "{{ frigate_shm_size }}"
    ports:
      - "{{ frigate_unauth_port }}:5000"
      - "{{ frigate_auth_port }}:8971"
      - '127.0.0.1:8554:8554' # RTSP feeds
      - '127.0.0.1:8555:8555/tcp' # WebRTC over tcp
      - '127.0.0.1:8555:8555/udp' # WebRTC over udp
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - "{{ frigate_path }}/config:/config"
      - "{{ frigate_storage_path }}:/media/frigate"
    mounts:
      - type: tmpfs
        target: /tmp/cache
        tmpfs_size: "{{ frigate_tmp_size }}"
    devices:
      # - /dev/bus/usb:/dev/bus/usb # passes the USB Coral
      - /dev/apex_0:/dev/apex_0 # passes the PCIe Coral
    device_requests:
      - driver: nvidia
        count: -1  # this means we want all
        capabilities:
          - ['gpu']
    env:
      FRIGATE_RTSP_USER: "{{ frigate_rtsp_username }}"
      FRIGATE_RTSP_PASSWORD: "{{ frigate_rtsp_password }}"
      FRIGATE_ONVIF_USER: "{{ frigate_onvif_username }}"
      FRIGATE_ONVIF_PASSWORD: "{{ frigate_onvif_password }}"

- name: Deploy Frigate nginx vhost
  ansible.builtin.include_tasks: deploy_nginx_vhost.yml
  vars:
    host_name: "{{ frigate_host_name }}"
    http_port: "{{ frigate_auth_port }}"
    logs_dir: "{{ frigate_nginx_logs_dir }}"
    ssl: "{{ frigate_nginx_ssl }}"
    server_block_beginning: |
      {% if frigate_nginx_ip_auth %}
          include snippets/ip_auth.conf;
      {% endif %}
    location_block_beginning: |
      {% if frigate_nginx_ip_auth %}
              include snippets/ip_auth_check.conf;
      {% endif %}
  when: frigate_nginx_proxy

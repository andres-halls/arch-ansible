---
- name: Ensure {{ homeassistant_path }}/config directory exists
  ansible.builtin.file:
    path: "{{ homeassistant_path }}/config"
    state: directory

- name: Ensure {{ homeassistant_nginx_logs_dir }} directory exists
  ansible.builtin.file:
    path: "{{ homeassistant_nginx_logs_dir }}"
    state: directory
  when: homeassistant_nginx_proxy

- name: Deploy {{ homeassistant_path }}/config/configuration.yaml
  ansible.builtin.template:
    src: configuration.yaml.j2
    dest: "{{ homeassistant_path }}/config/configuration.yaml"

- name: Pull latest HA image and run docker container
  community.docker.docker_container:
    name: homeassistant
    image: 'ghcr.io/home-assistant/home-assistant:stable'
    pull: true
    recreate: true
    privileged: true
    network_mode: host
    restart_policy: 'unless-stopped'
    hostname: "{{ homeassistant_host_name }}"
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - "{{ homeassistant_path }}/config:/config"

- name: Check if HACS is installed
  ansible.builtin.stat:
    path: "{{ homeassistant_path }}/config/custom_components/hacs"
  register: hacs

- name: Install HACS
  community.docker.docker_container_exec:
    container: homeassistant
    command: /bin/bash -c 'wget -O - https://get.hacs.xyz | bash -'
    chdir: /config
  when: not hacs.stat.exists
  notify:
    - restart homeassistant

- name: Install Mosquitto MQTT broker
  ansible.builtin.include_tasks: mosquitto.yml
  when: homeassistant_mosquitto

- name: Deploy HA nginx vhost
  ansible.builtin.include_tasks: deploy_nginx_vhost.yml
  vars:
    host_name: "{{ homeassistant_host_name }}"
    http_port: '8123'
    logs_dir: "{{ homeassistant_nginx_logs_dir }}"
    ssl: "{{ homeassistant_nginx_ssl }}"
    server_block_beginning: |
      {% if homeassistant_nginx_ip_auth %}
          include snippets/ip_auth.conf;
      {% endif %}
    location_block_beginning: |
      {% if homeassistant_nginx_ip_auth %}
              include snippets/ip_auth_check.conf;
      {% endif %}
  when: homeassistant_nginx_proxy

---
- name: Check if plex user exists
  getent: database=passwd key=plex fail_key=no

- name: Create plex user
  user: name=plex shell=/sbin/nologin
  when: not getent_passwd.plex and plex_media_dir is match('/home/plex')

- name: Ensure plex directory structure exists
  file: dest="{{ item }}" recurse=yes state=directory
  with_items:
    - "{{ plex_config_dir }}"
    - "{{ plex_transcode_dir }}"
    - "{{ plex_media_dir }}"
    - "{{ plex_logs_dir }}"

- name: Pull latest Plex Media Server image and run docker container
  docker_container:
    name: plex
    image: 'plexinc/pms-docker:plexpass'
    pull: yes
    state: started
    recreate: yes
    restart_policy: always
    hostname: "{{ plex_host_name }}"
    exposed_ports: "{{ webtools_ports if plex_webtools else [] }}"
    published_ports: "{{ plex_ports + webtools_ports if plex_webtools else plex_ports }}"
    volumes:
      - "{{ plex_config_dir }}:/config"
      - "{{ plex_transcode_dir }}:/transcode"
      - "{{ plex_media_dir }}:/data"
    env:
      TZ: "{{ plex_time_zone }}"
      ADVERTISE_IP: "{{ plex_advertise_ip }}"
      PLEX_UID: "{% if plex_uid != '' %}{{ plex_uid }}{% elif getent_passwd.plex %}{{ getent_passwd.plex[1] }}{% endif %}"
      PLEX_GID: "{% if plex_gid != '' %}{{ plex_gid }}{% elif getent_passwd.plex %}{{ getent_passwd.plex[2] }}{% endif %}"

- name: Install WebTools plug-in
  include_tasks: webtools.yml
  when: plex_webtools

- name: Install Tautulli
  include_tasks: tautulli.yml
  when: plex_tautulli

- name: Deploy plex nginx vhost
  include_tasks: deploy_nginx_vhost.yml
  vars:
    host_name: "{{ plex_host_name }}"
    http_port: '32400'
    logs_dir: "{{ plex_logs_dir }}"
    ssl: "{{ plex_ssl_enabled }}"
    server_block_ending: |
      {% if plex_webtools %}
          location /webtools {
              proxy_pass http://172.17.0.1:33400/webtools;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Real-Port $remote_port;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      {% endif %}

      {% if plex_tautulli %}
          location /tautulli {
              proxy_pass http://172.17.0.1:8181;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Real-Port $remote_port;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      {% endif %}
  when: plex_nginx_proxy

- name: Deploy plex update systemd timer
  copy: src="{{ item }}" dest="/etc/systemd/system/{{ item }}"
  with_items:
    - 'plex-update.service'
    - 'plex-update.timer'
  notify:
    - reload systemd

- meta: flush_handlers

- name: Enable and start plex-update.timer
  service: name='plex-update.timer' enabled=yes state=started
